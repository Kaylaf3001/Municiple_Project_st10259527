@using Municiple_Project_st10259527.Models
@model IEnumerable<ReportModel>

@{
    var status = (ReportStatus)ViewData["Status"];
}

@if (Model.Any())
{
    <div class="table-responsive">
        <table class="table table-sm table-hover">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Type</th>
                    <th>Location</th>
                    <th>Reported On</th>
                    <th>Status</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var report in Model.Take(5))
                {
                    <tr>
                        <td>@report.ReportId</td>
                        <td>@report.ReportType</td>
                        <td>@report.Location</td>
                        <td>@report.ReportDate.ToString("g")</td>
                        <td><span class="badge @GetStatusBadgeClass(report.Status)">@report.Status</span></td>
                        <td>
                            <div class="btn-group btn-group-sm">
                                <a asp-action="ReportDetails" asp-controller="Admin" asp-route-id="@report.ReportId" 
                                   class="btn btn-info" title="View Details">
                                    <i class="fas fa-eye"></i>
                                </a>
                                
                                @if (status == ReportStatus.Pending)
                                {
                                    <button type="button" class="btn btn-success" title="Approve" 
                                            onclick="updateReportStatus(@report.ReportId, @((int)ReportStatus.Approved))">
                                        <i class="fas fa-check"></i>
                                    </button>
                                    
                                    <button type="button" class="btn btn-warning" title="Mark In Review"
                                            onclick="updateReportStatus(@report.ReportId, @((int)ReportStatus.InReview))">
                                        <i class="fas fa-tasks"></i>
                                    </button>
                                    
                                    <button type="button" class="btn btn-danger" title="Reject"
                                            onclick="showRejectModal(@report.ReportId)">
                                        <i class="fas fa-times"></i>
                                    </button>
                                }
                                
                                @if (status == ReportStatus.InReview)
                                {
                                    <button type="button" class="btn btn-success" title="Approve"
                                            onclick="updateReportStatus(@report.ReportId, @((int)ReportStatus.Approved))">
                                        <i class="fas fa-check"></i>
                                    </button>
                                    
                                    <button type="button" class="btn btn-danger" title="Reject"
                                            onclick="showRejectModal(@report.ReportId)">
                                        <i class="fas fa-times"></i>
                                    </button>
                                }
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    
    @if (Model.Count() > 5)
    {
        <div class="text-right mt-2">
            <a asp-action="AllReports" asp-route-status="@status" class="btn btn-sm btn-outline-secondary">
                View All @Model.Count() Reports
            </a>
        </div>
    }
}
else
{
    <div class="alert alert-info mb-0">
        No @status reports found.
    </div>
}

@functions {
    string GetStatusBadgeClass(ReportStatus status)
    {
        return status switch
        {
            ReportStatus.Pending => "badge-warning",
            ReportStatus.InReview => "badge-info",
            ReportStatus.Approved => "badge-primary",
            ReportStatus.Rejected => "badge-danger",
            ReportStatus.Completed => "badge-success",
            _ => "badge-secondary"
        };
    }
}
