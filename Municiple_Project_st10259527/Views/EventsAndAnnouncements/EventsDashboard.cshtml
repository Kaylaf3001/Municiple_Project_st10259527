@model Municiple_Project_st10259527.ViewModels.EventsAndAnnouncementsViewModel

@{
    ViewData["Title"] = "Events Dashboard";
    Layout = "_Layout";
}

<style>
    /* General Page Layout */
    body {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        background: #eef2f7;
        margin: 0;
        padding: 0;
        color: #333;
        min-height: 100vh;
        display: flex;
        flex-direction: column;
    }

    main {
        flex-grow: 1;
        display: flex;
        flex-direction: column;
        padding: 20px;
    }

    /* Page Heading */
    .page-title {
        text-align: center;
        color: #1e3a8a;
        font-size: 28px;
        margin-bottom: 20px;
        font-weight: bold;
    }

    /* Section Titles */
    .section-title {
        font-size: 22px;
        color: #1e3a8a;
        margin: 25px 0 15px;
        font-weight: bold;
        border-bottom: 2px solid #1e3a8a;
        padding-bottom: 5px;
    }

    /* Filters */
    .filters {
        display: flex;
        flex-wrap: wrap;
        gap: 15px;
        justify-content: center;
        padding: 20px;
        margin-bottom: 20px;
    }

        .filters input,
        .filters select {
            padding: 12px 15px;
            border-radius: 50px;
            border: 1px solid #ccc;
            min-width: 220px;
            font-size: 14px;
            transition: all 0.3s ease;
        }

            .filters input:focus,
            .filters select:focus {
                border-color: #1e3a8a;
                outline: none;
                box-shadow: 0 0 5px rgba(30, 58, 138, 0.3);
            }

    /* Events Grid */
    .events {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
        gap: 25px;
        width: 100%;
    }

    /* Event Card */
    .event-card {
        background: #fff;
        padding: 25px;
        border-radius: 15px;
        box-shadow: 0 8px 20px rgba(0,0,0,0.05);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        height: 350px; /* Fixed height for uniformity */
    }

        .event-card:hover {
            transform: translateY(-8px);
            box-shadow: 0 12px 30px rgba(0,0,0,0.1);
        }

        .event-card h2 {
            margin: 0 0 10px;
            color: #1e3a8a;
            font-size: 22px;
        }

        .event-card p {
            margin: 6px 0;
            font-size: 14px;
            color: #555;
        }

    .description {
        margin: 12px 0;
        font-size: 14px;
        line-height: 1.6;
        color: #666;
        flex-grow: 1; /* ensures description takes remaining space */
    }

    /* Status Labels */
    .status {
        display: inline-block;
        padding: 6px 16px;
        border-radius: 25px;
        font-size: 12px;
        font-weight: bold;
        margin-top: 10px;
        text-transform: uppercase;
    }

        .status.upcoming {
            background: #d1fae5;
            color: #065f46;
        }

        .status.announced {
            background: #dbeafe;
            color: #1e40af;
        }

        .status.cancelled {
            background: #fee2e2;
            color: #991b1b;
        }

        .status.normal {
            background: #d1fae5;
            color: #4caf50; /* Green for normal */
        }


    /* Buttons */
    .view-btn {
        margin-top: 15px;
        background: #1e3a8a;
        color: #fff;
        border: none;
        padding: 12px 18px;
        border-radius: 25px;
        cursor: pointer;
        font-weight: bold;
        font-size: 14px;
        transition: all 0.3s ease;
        align-self: flex-start;
    }

        .view-btn:hover {
            background: #163074;
            transform: translateY(-2px);
        }

    .queue-visualization {
        border-left: 4px solid #007bff;
        padding-left: 15px;
    }

    .queue-item {
        transition: all 0.3s ease;
    }

        .queue-item:hover {
            transform: translateX(10px);
        }

    .badge {
        font-size: 1rem;
        padding: 0.5em 0.8em;
    }
</style>

<main>
    <!-- Page Heading -->
    <h1 class="page-title">Local Announcements & Events</h1>

    <!-- Filter Form -->
    <form method="get" asp-controller="EventsAndAnnouncements" asp-action="EventsDashboard" class="mb-4">
        <div class="row g-3">
            <!-- Date Range -->
            <div class="col-md-3">
                <label class="form-label">From Date</label>
                <input type="date" class="form-control" name="startDate"
                       value="@(Model.StartDate?.ToString("yyyy-MM-dd"))" />
            </div>
            <div class="col-md-3">
                <label class="form-label">To Date</label>
                <input type="date" class="form-control" name="endDate"
                       value="@(Model.EndDate?.ToString("yyyy-MM-dd"))" />
            </div>

            <!-- Category Dropdown -->
            <div class="col-md-3">
                <label class="form-label">Category</label>
                <select name="selectedCategory" class="form-select">
                    <option value="">All Categories</option>
                    @foreach (var category in Model.Categories)
                    {
                        <option value="@category"
                                selected="@(category == Model.SelectedCategory ? "selected" : null)">
                            @category
                        </option>
                    }
                </select>
            </div>

            <!-- Search Box -->
            <div class="col-md-3">
                <label class="form-label">Search</label>
                <div class="input-group">
                    <input type="text" class="form-control" name="searchTerm"
                           value="@Model.SearchTerm" placeholder="Search events..." />
                    <button type="submit" class="btn btn-primary">
                        <i class="bi bi-search"></i> Filter
                    </button>
                </div>
            </div>
        </div>

        <!-- Active Filters -->
        @{
            bool hasActiveFilters = !string.IsNullOrEmpty(Model.SelectedCategory) ||
            Model.StartDate.HasValue ||
            Model.EndDate.HasValue ||
            !string.IsNullOrEmpty(Model.SearchTerm);
        }

        @if (hasActiveFilters)
        {
            <div class="mt-2">
                <small class="text-muted">
                    Active filters:
                    @if (!string.IsNullOrEmpty(Model.SelectedCategory))
                    {
                        <span class="badge bg-primary me-1">Category: @Model.SelectedCategory</span>
                    }
                    @if (Model.StartDate.HasValue)
                    {
                        <span class="badge bg-info me-1">From: @Model.StartDate.Value.ToShortDateString()</span>
                    }
                    @if (Model.EndDate.HasValue)
                    {
                        <span class="badge bg-info me-1">To: @Model.EndDate.Value.ToShortDateString()</span>
                    }
                    @if (!string.IsNullOrEmpty(Model.SearchTerm))
                    {
                        <span class="badge bg-secondary me-1">Search: @Model.SearchTerm</span>
                    }
                    <a href="@Url.Action("EventsDashboard")" class="text-danger small ms-2">Clear all</a>
                </small>
            </div>
        }
    </form>

    <div class="container mt-4">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h2>Events & Announcements</h2>
            <a href="/User/UserDashboard" class="btn btn-outline-primary">
                <i class="fas fa-arrow-left me-2"></i>Back to Dashboard
            </a>
        </div>

        <!-- Rest of your existing view content -->
        <div class="row mt-4">
            <div class="col-md-6">
                <h2>All Events</h2>
                @foreach (var ev in Model.Events)
                {
                    <div class="card mb-3">
                        <div class="card-body">
                            <h5 class="card-title">@ev.Title</h5>
                            <p class="card-text">@ev.Description</p>
                            <p class="card-text"><small class="text-muted">@ev.Date.ToString("f") - @ev.Location</small></p>
                        </div>
                    </div>
                }
            </div>
            <div class="col-md-6">
                <h2>Announcements</h2>
                @foreach (var announcement in Model.Announcements)
                {
                    <div class="card mb-3">
                        <div class="card-body">
                            <h5 class="card-title">@announcement.Title</h5>
                            <p class="card-text">@announcement.Description</p>
                            <p class="card-text"><small class="text-muted">@announcement.Date.ToString("f")</small></p>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>

    </main>
