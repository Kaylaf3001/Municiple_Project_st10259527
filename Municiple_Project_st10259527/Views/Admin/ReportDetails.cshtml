@model Municiple_Project_st10259527.Models.ReportModel
@{
    ViewData["Title"] = "Report Details";
    Layout = "_AdminLayout";
}

<div class="container-fluid">
    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <h1 class="h3 mb-0 text-gray-800">Report Details</h1>
        <a asp-action="Dashboard" class="btn btn-secondary btn-sm">Back to Dashboard</a>
    </div>

    <div class="row">
        <div class="col-lg-8">
            <!-- Report Details Card -->
            <div class="card shadow mb-4">
                <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                    <h6 class="m-0 font-weight-bold text-primary">Report #@Model.ReportId - @Model.ReportType</h6>
                    <span class="badge @GetStatusBadgeClass(Model.Status)">@Model.Status.ToString()</span>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <h5 class="font-weight-bold">Report Information</h5>
                            <hr>
                            <p><strong>Reported By:</strong> @Model.User.FullName</p>
                            <p><strong>Reported On:</strong> @Model.ReportDate.ToString("f")</p>
                            <p><strong>Location:</strong> @Model.Location</p>
                            <p><strong>Status:</strong> @Model.Status</p>

                            @if (Model.AssignedAdmin != null)
                            {
                                <p><strong>Assigned To:</strong> @Model.AssignedAdmin.FullName</p>
                            }

                            @if (Model.UpdatedAt.HasValue)
                            {
                                <p><strong>Last Updated:</strong> @Model.UpdatedAt.Value.ToString("f")</p>
                            }
                        </div>
                        <div class="col-md-6">
                            <h5 class="font-weight-bold">Description</h5>
                            <hr>
                            <div class="border p-3 rounded">
                                @Model.Description
                            </div>

                            @if (!string.IsNullOrEmpty(Model.FilePath))
                            {
                                <div class="mt-3">
                                    <h6 class="font-weight-bold">Attached File:</h6>
                                    <a href="@Url.Content($"~/uploads/{Model.FilePath}")" class="btn btn-sm btn-outline-primary" target="_blank">
                                        <i class="fas fa-download"></i> Download Attachment
                                    </a>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>

            <!-- Admin Actions Card -->
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Admin Actions</h6>
                </div>
                <div class="card-body">
                    <div class="btn-group">
                        @if (Model.Status == ReportStatus.Pending)
                        {
                            <button type="button" class="btn btn-outline-info"
                                    onclick="updateStatus(@Model.ReportId, @((int)ReportStatus.InReview), document.getElementById('adminNotes').value)">
                                <i class="bi bi-arrow-repeat me-1"></i> Mark In Review
                            </button>
                        }
                        <button type="button" class="btn btn-outline-danger"
                                onclick="updateStatus(@Model.ReportId, @((int)ReportStatus.Rejected), document.getElementById('adminNotes').value)">
                            <i class="bi bi-x-circle me-1"></i> Reject
                        </button>
                        <button type="button" class="btn btn-primary"
                                onclick="updateStatus(@Model.ReportId, @((int)ReportStatus.Approved), document.getElementById('adminNotes').value)">
                            <i class="bi bi-check-circle me-1"></i> Approve
                        </button>
                    </div>

                    <div class="form-group mt-3">
                        <label for="adminNotes">Admin Notes</label>
                        <textarea class="form-control" id="adminNotes" name="adminNotes" rows="3">@Model.AdminNotes</textarea>
                    </div>

                    <script>
                        async function updateStatus(reportId, status, adminNotes) {
                            if (!confirm('Are you sure you want to update the status?')) {
                                return false;
                            }

                            try {
                                const formData = new FormData();
                                formData.append('reportId', reportId);
                                formData.append('status', status);
                                formData.append('adminNotes', adminNotes);
                                formData.append('__RequestVerificationToken', document.querySelector('input[name="__RequestVerificationToken"]').value);

                                const response = await fetch('/Admin/UpdateStatus', {
                                    method: 'POST',
                                    body: new URLSearchParams(formData),
                                    headers: {
                                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                                    }
                                });

                                if (!response.ok) {
                                    const errorData = await response.json().catch(() => ({}));
                                    throw new Error(errorData.error || 'Failed to update status');
                                }

                                const result = await response.json();
                                if (result.success) {
                                    alert('Status updated successfully!');
                                    window.location.reload();
                                } else {
                                    throw new Error(result.error || 'Unknown error occurred');
                                }
                            } catch (error) {
                                console.error('Error details:', error);
                                alert('Error: ' + (error.message || 'An error occurred while updating the status. Please check the console for details.'));
                            }

                            return false;
                        }
                    </script>
                </div>
            </div>
        </div>

        <!-- Status History -->
        <div class="col-lg-4">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Status History</h6>
                </div>
                <div class="card-body">
                    <div class="timeline">
                        <div class="timeline-item">
                            <div class="timeline-marker bg-primary"></div>
                            <div class="timeline-content">
                                <h6 class="font-weight-bold">Report Created</h6>
                                <p class="text-muted small">@Model.ReportDate.ToString("f")</p>
                            </div>
                        </div>

                        @if (Model.UpdatedAt.HasValue)
                        {
                            <div class="timeline-item">
                                <div class="timeline-marker bg-success"></div>
                                <div class="timeline-content">
                                    <h6 class="font-weight-bold">Status Updated to @Model.Status</h6>
                                    <p class="text-muted small">@Model.UpdatedAt.Value.ToString("f")</p>
                                    @if (!string.IsNullOrEmpty(Model.AdminNotes))
                                    {
                                        <div class="alert alert-light p-2 mt-2 small">
                                            @Model.AdminNotes
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@functions {
    string GetStatusBadgeClass(ReportStatus status)
    {
        return status switch
        {
            ReportStatus.Pending => "badge-warning",
            ReportStatus.InReview => "badge-info",
            ReportStatus.Approved => "badge-primary",
            ReportStatus.Rejected => "badge-danger",
            ReportStatus.Completed => "badge-success",
            _ => "badge-secondary"
        };
    }
}

@section Styles {
    <style>
        .timeline {
            position: relative;
            padding-left: 2rem;
        }

        .timeline-item {
            position: relative;
            padding-bottom: 1.5rem;
            border-left: 2px solid #e3e6f0;
            padding-left: 1.5rem;
        }

            .timeline-item:last-child {
                border-left-color: transparent;
            }

        .timeline-marker {
            position: absolute;
            left: -8px;
            width: 14px;
            height: 14px;
            border-radius: 50%;
            top: 4px;
        }

        .timeline-content {
            margin-left: 0.5rem;
        }
    </style>
}

@section Scripts {
    <script>
        // Initialize Bootstrap tooltips
        $(function () {
            $('[data-toggle="tooltip"]').tooltip();
        });
    </script>
}
