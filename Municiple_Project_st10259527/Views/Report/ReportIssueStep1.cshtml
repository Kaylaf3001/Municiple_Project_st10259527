@{
    ViewData["Title"] = "Report Issue - Location";
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <title>Report Issue</title>
    <style>
        body {
            margin: 0;
            font-family: Arial, sans-serif;
            background: #1A3456;
            height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .wizard-container {
            background: #f7f7f7;
            padding: 30px;
            border-radius: 12px;
            width: 400px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.2);
            text-align: center;
        }

            .wizard-container h2 {
                font-size: 22px;
                margin-bottom: 10px;
            }

            .wizard-container h3 {
                font-size: 16px;
                margin: 5px 0;
            }

            .wizard-container p {
                font-size: 14px;
                color: #555;
                margin-bottom: 20px;
            }

        .form-group {
            margin-bottom: 20px;
            text-align: left;
        }

            .form-group input {
                width: 100%;
                padding: 10px;
                border: 1px solid #ccc;
                border-radius: 8px;
            }

        .progress-bar {
            display: flex;
            justify-content: space-between;
            margin: 20px 0;
        }

        .progress-step {
            flex: 1;
            height: 4px;
            margin: 0 4px;
            border-radius: 2px;
            background: #ddd;
        }

            .progress-step.active {
                background: #1A3456;
            }

        .wizard-buttons {
            display: flex;
            justify-content: space-between;
        }

        .btn {
            padding: 10px 20px;
            background: #1A3456;
            border: none;
            color: white;
            border-radius: 6px;
            cursor: pointer;
            font-size: 14px;
        }

            .btn:hover {
                background: #142a47;
            }
    </style>
</head>
<body>
    <div class="wizard-container">
        <h2>Report Issue</h2>
        <h3>Location</h3>
        <p>Please enter the location where the issue is based</p>

        <!-- Progress Bar -->
        <div class="progress-bar">
            <div class="progress-step active"></div>
            <div class="progress-step"></div>
            <div class="progress-step"></div>
            <div class="progress-step"></div>
        </div>

        <form asp-action="ReportIssueStep1" method="post">
            <div class="form-group">
                <input type="text"
                       name="Location"
                       placeholder="Example: Blouberg, Cape Town, Western Cape"
                       list="locationOptions"
                       autocomplete="off"
                       required />
                <datalist id="locationOptions">
                    @foreach (var loc in ViewBag.WesternCapeLocations)
                    {
                        <option value="@loc"></option>
                    }
                </datalist>
            </div>

            <!-- Buttons -->
            <div class="wizard-buttons">
                <button type="button"
                        class="btn"
                        asp-controller="Home"
                        asp-action="Index"
                        onclick="location.href='@Url.Action("Index", "Home")'">
                    Back
                </button>
                <button type="submit" class="btn">Next</button>
            </div>
        </form>
    </div>
</body>
</html>
<script>
    const locations = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(ViewBag.WesternCapeLocations));
    const input = document.getElementById("locationInput");

    input.addEventListener("input", function() {
        const val = this.value.toLowerCase();
        closeAllLists();

        if (!val) return false;

        const list = document.createElement("div");
        list.setAttribute("class", "autocomplete-items");
        this.parentNode.appendChild(list);

        let count = 0;
        for (let loc of locations) {
            if (loc.toLowerCase().includes(val) && count < 10) {
                const item = document.createElement("div");
                item.innerHTML = "<strong>" + loc.substr(0, val.length) + "</strong>" + loc.substr(val.length);
                item.addEventListener("click", function() {
                    input.value = loc;
                    closeAllLists();
                });
                list.appendChild(item);
                count++;
            }
        }
    });

    function closeAllLists(elmnt) {
        const items = document.getElementsByClassName("autocomplete-items");
        for (let i = 0; i < items.length; i++) {
            if (elmnt != items[i] && elmnt != input) {
                items[i].parentNode.removeChild(items[i]);
            }
        }
    }

    document.addEventListener("click", function (e) {
        closeAllLists(e.target);
    });
</script>


